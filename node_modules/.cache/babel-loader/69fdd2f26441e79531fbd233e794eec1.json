{"remainingRequest":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/mock/user.js","dependencies":[{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/mock/user.js","mtime":1554962408349},{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _Object$defineProperty = require(\"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\nvar tokens = {\n  admin: {\n    token: 'admin-token'\n  },\n  editor: {\n    token: 'editor-token'\n  }\n};\nvar users = {\n  'admin-token': {\n    roles: ['admin'],\n    introduction: 'I am a super administrator',\n    avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n    name: 'Super Admin'\n  },\n  'editor-token': {\n    roles: ['editor'],\n    introduction: 'I am an editor',\n    avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n    name: 'Normal Editor'\n  }\n};\nvar _default = [// user login\n{\n  url: '/user/login',\n  type: 'post',\n  response: function response(config) {\n    var username = config.body.username;\n    var token = tokens[username]; // mock error\n\n    if (!token) {\n      return {\n        code: 60204,\n        message: 'Account and password are incorrect.'\n      };\n    }\n\n    return {\n      code: 20000,\n      data: token\n    };\n  }\n}, // get user info\n{\n  url: '/user/info\\.*',\n  type: 'get',\n  response: function response(config) {\n    var token = config.query.token;\n    var info = users[token]; // mock error\n\n    if (!info) {\n      return {\n        code: 50008,\n        message: 'Login failed, unable to get user details.'\n      };\n    }\n\n    return {\n      code: 20000,\n      data: info\n    };\n  }\n}, // user logout\n{\n  url: '/user/logout',\n  type: 'post',\n  response: function response(_) {\n    return {\n      code: 20000,\n      data: 'success'\n    };\n  }\n}];\nexports.default = _default;",null]}