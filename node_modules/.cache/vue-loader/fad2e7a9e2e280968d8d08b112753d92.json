{"remainingRequest":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/src/components/Breadcrumb/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/src/components/Breadcrumb/index.vue","mtime":1554962408392},{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ajee/Documents/Dexter/node/vue/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { generateTitle } from '@/utils/i18n'\nimport pathToRegexp from 'path-to-regexp'\n\nexport default {\n  data() {\n    return {\n      levelList: null\n    }\n  },\n  watch: {\n    $route() {\n      this.getBreadcrumb()\n    }\n  },\n  created() {\n    this.getBreadcrumb()\n  },\n  methods: {\n    generateTitle,\n    getBreadcrumb() {\n      let matched = this.$route.matched.filter(item => item.name)\n\n      const first = matched[0]\n      if (first && first.name.trim().toLocaleLowerCase() !== 'Dashboard'.toLocaleLowerCase()) {\n        matched = [{ path: '/dashboard', meta: { title: 'dashboard' }}].concat(matched)\n      }\n\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n    },\n    pathCompile(path) {\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n      const { params } = this.$route\n      var toPath = pathToRegexp.compile(path)\n      return toPath(params)\n    },\n    handleLink(item) {\n      const { redirect, path } = item\n      if (redirect) {\n        this.$router.push(redirect)\n        return\n      }\n      this.$router.push(this.pathCompile(path))\n    }\n  }\n}\n",null]}